{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Webpage Analyzer</h1>
                <hr>
                <label for="url">Enter URL:</label>
                <input type="text" id="url" name="url" required>
                <a id="analyzerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Analyze</a>
            </div>
        </div>
         <div class="row">
            <div class="col">
                <h4 class="mt-5">Response from the analyzer service</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>

        <div id="loading">Waiting for result...</div>
    </div>
{{end}}

{{define "js"}}
    <script>
    let analyzerBtn = document.getElementById("analyzerBtn");
    let url = document.getElementById("url");
    let recevied = document.getElementById("received");
    let loadingPanel = document.getElementById("loading");   

    analyzerBtn.addEventListener("click", function() {

        loadingPanel.style.display = 'block';

        const payload = {
            action: "analyze",
            url: url.value,            
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers: headers,
        }

        fetch("http:\/\/localhost:8080", body)
        .then((response) => response.json())
        .then((data) => {           
            loadingPanel.style.display = 'none';
            if (data.error) {
                received.innerHTML = "Error from the server: <br />" + data.message + "<br />Error code: "  + data.statusCode;
            } else {
                received.innerHTML = formatResult(data.analysisResult);
            }
        })
         .catch((error) => {
            received.innerHTML += "<br><br>Erorr: " + error;
            loadingPanel.style.display = 'none';
        })
    })
        
    function formatResult(result) {
            return `             
                    <div>HTML Version: ${result.HTMLVersion}</div>               
                    <div>Page Title: ${result.PageTitle}</div>             
                    <div>Number of Headings:                        
                        ${Object.keys(result.Headings).length > 0 
                            ? `<ul>${Object.entries(result.Headings).map(([key, value]) => `<li>${key}: ${value}</li>`).join('')}</ul>` 
                            : 0}
                    </div>
                    <div>Number of Internal Links: ${result.NumInternalLinks}</div>                 
                    <div>Number of External Links: ${result.NumExternalLinks}</div>               
                    <div>Number of Inaccessible Links: ${result.NumInaccessibleLinks}</div>
                    <div>Contains Login Form: ${result.IsContainLoginForm ? 'Yes' : 'No'}</div>              
            `;
        }
    </script>
{{end}}
